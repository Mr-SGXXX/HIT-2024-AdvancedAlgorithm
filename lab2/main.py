import os
import shutil

from map import Map
from draw_figure import gen_gif
from A_star_tree import A_star_tree
from A_star_tree_twoway import A_star_tree_twoway

# 0表示普通地形，代价为0，1表示沙漠，代价为4，2表示河流，代价为2，3表示障碍，无法通行

DATA_DIR = "./lab2/results"

def find_way(map_args, two_way=False):
    if two_way:
        map_args["rst_dir"] += "_two_way"
    else:
        map_args["rst_dir"] += "_one_way"
    shutil.rmtree(map_args["rst_dir"], ignore_errors=True)
    os.makedirs(map_args["rst_dir"])
    
    map = Map(**map_args)
    map.draw_map()
    if not two_way:
        cost = A_star_tree(map).find_path()
    else:
        cost = A_star_tree_twoway(map).find_path()
    gen_gif(map_args["rst_dir"], f"rst_cost_{cost:.3f}.gif")
        


def main():
    map1_args = {
        "shape": (17, 14),
        "start_point": (3, 8),
        "end_point": (14, 9),
        "obstacle_points": [(6, 5), (6, 6), (7, 7), (7, 8), (7, 9), (8, 9), (8, 10), (8, 11)],
        "rst_dir": os.path.join(DATA_DIR, "map1")
    }
    
    map2_args = {
        "shape": (40, 20),
        "start_point": (4, 10),
        "end_point": (35, 0),
        "obstacle_points": [
            (0, 2), (1, 2), (2, 2), (2, 6), (2, 7), (2, 10), (2, 11), (3, 0), (3, 2), (3, 6),
            (3, 11), (3, 12), (3, 13), (3, 14), (3, 15), (3, 16), (3, 18), (3, 19), (4, 2), 
            (4, 6), (4, 11), (4, 15), (5, 2), (5, 6), (5, 7), (5, 8), (5, 9), (5, 10), (5, 11),
            (5, 15), (6, 6), (6, 15), (7, 0), (7, 1), (7, 2), (7, 5), (7, 6), (7, 7), (7, 9),
            (7, 10), (7, 15), (7, 17), (7, 18), (7, 19), (8, 2), (8, 3), (8, 5), (8, 10), (8, 11),
            (8, 12), (8, 13), (8, 14), (8, 15), (9, 2), (9, 13), (10, 2), (11, 13), (12, 0),
            (12, 1), (12, 2), (12, 3), (12, 4), (12, 5), (12, 6), (12, 7), (12, 12), (12, 13),
            (12, 14), (12, 15), (12, 16), (12, 17), (12, 18), (12, 19), (19, 10), (19, 11),
            (19, 12), (20, 10), (20, 11), (20, 12), (21, 10), (21, 11), (21, 12), (24, 15),
            (24, 16), (25, 15), (25, 16), (28, 10), (31, 11), (31, 13), (36, 7), (36, 9) 
        ],
        "desert_points": [
            (24, 0), (25, 0), (25, 1), (26, 0), (26, 1), (26, 2), (26, 3), (26, 4), (27, 0), (27, 1),
            (27, 2), (27, 3), (27, 4), (27, 5), (27, 6), (28, 0), (28, 1), (28, 2), (28, 3), (28, 4),
            (28, 5), (28, 6), (29, 0), (29, 1), (29, 2), (29, 3), (29, 4), (29, 5), (29, 6), (29, 7),
            (30, 0), (30, 1), (30, 2), (30, 3), (30, 4), (30, 5), (30, 6), (30, 7), (31, 0), (31, 1),
            (31, 2), (31, 3), (31, 4), (31, 5), (31, 6), (31, 7), (32, 0), (32, 1), (32, 2), (32, 4),
            (32, 5), (32, 6), (32, 7), (33, 0), (33, 1), (33, 3), (34, 0), (34, 2), (34, 3), (34, 4),
            (35, 0), (35, 1), (35, 2), (35, 3), (35, 4), (36, 0), (36, 1), (36, 2), (36, 3), (37, 0),
            (37, 1), (37, 2), (38, 0), (38, 1), (38, 2), (39, 0), (39, 1), (39, 2),
        ], 
        "river_points": [
            (28, 19), (29, 18), (29, 19), (30, 17), (30, 18), (30, 19), (31, 15), (31, 16), (31, 17), 
            (31, 18), (32, 3), (32, 8), (32, 9), (32, 10), (32, 11), (32, 13), (32, 14), (32, 15),
            (32, 16), (32, 17), (33, 2), (33, 4), (33, 5), (33, 6), (33, 7), (33, 8), (33, 9), (33, 10),
            (33, 12), (33, 13), (33, 14), (33, 15), (33, 16), (34, 1), (34, 5), (34, 6), (34, 7), (34, 8),
            (34, 9), (34, 11), (34, 12), (34, 13), (34, 14), (35, 7), (35, 8), (35, 10), (35, 11), (36, 10)
        ],
        "rst_dir": os.path.join(DATA_DIR, "map2")
    }
    
    # find_way(map1_args, two_way=False)
    find_way(map1_args, two_way=True)
    # find_way(map2_args, two_way=False)    
    # find_way(map2_args, two_way=True)
    
    
    
if __name__ == "__main__":
    main()